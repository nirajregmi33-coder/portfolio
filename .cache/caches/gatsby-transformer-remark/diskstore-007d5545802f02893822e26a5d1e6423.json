{"expireTime":9007201009626691000,"key":"transformer-remark-markdown-ast-d588b00f4d0a4c0c675fa9fdfc5ab763-gatsby-remark-external-linksgatsby-remark-imagesgatsby-remark-code-titlesgatsby-remark-prismjs-","val":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"Hereâ€™s how you can fetch an employee's laptop IP address programmatically for remote processing through intune..","position":{"start":{"line":2,"column":1,"offset":2},"end":{"line":2,"column":113,"offset":114}}}],"position":{"start":{"line":2,"column":1,"offset":2},"end":{"line":2,"column":113,"offset":114}}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">your google script code\r\n\r\n<span class=\"token keyword\">function</span> <span class=\"token function\">doPost</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token keyword\">var</span> sheet <span class=\"token operator\">=</span> SpreadsheetApp<span class=\"token punctuation\">.</span><span class=\"token function\">openById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"your_spreadsheet\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getSheetByName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"IP_ADDRESS\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n  <span class=\"token keyword\">var</span> data <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>postData<span class=\"token punctuation\">.</span>contents<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token keyword\">var</span> computerName <span class=\"token operator\">=</span> data<span class=\"token punctuation\">.</span>computerName<span class=\"token punctuation\">;</span>\r\n  <span class=\"token keyword\">var</span> userName <span class=\"token operator\">=</span> data<span class=\"token punctuation\">.</span>userName<span class=\"token punctuation\">;</span>\r\n  <span class=\"token keyword\">var</span> interfaces <span class=\"token operator\">=</span> data<span class=\"token punctuation\">.</span>interfaces<span class=\"token punctuation\">;</span> <span class=\"token comment\">// This is an object: { \"Wi-Fi\": \"192.168.29.173\", \"Ethernet\": \"192.168.29.167\" }</span>\r\n  <span class=\"token keyword\">var</span> publicIP <span class=\"token operator\">=</span> data<span class=\"token punctuation\">.</span>publicIP<span class=\"token punctuation\">;</span>\r\n  <span class=\"token keyword\">var</span> timestamp <span class=\"token operator\">=</span> Utilities<span class=\"token punctuation\">.</span><span class=\"token function\">formatDate</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> Session<span class=\"token punctuation\">.</span><span class=\"token function\">getScriptTimeZone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"yyyy/MM/dd HH:mm:ss\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n  <span class=\"token comment\">// Convert interfaces object into a string for storage (e.g. JSON string or comma-separated)</span>\r\n  <span class=\"token keyword\">var</span> interfacesString <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>interfaces<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n  <span class=\"token comment\">// Check if computerName exists, then update row, else append</span>\r\n  <span class=\"token keyword\">var</span> range <span class=\"token operator\">=</span> sheet<span class=\"token punctuation\">.</span><span class=\"token function\">getDataRange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token keyword\">var</span> values <span class=\"token operator\">=</span> range<span class=\"token punctuation\">.</span><span class=\"token function\">getValues</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token keyword\">var</span> found <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\r\n\r\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> values<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>values<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> computerName<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n      <span class=\"token comment\">// Update existing row</span>\r\n      sheet<span class=\"token punctuation\">.</span><span class=\"token function\">getRange</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">setValues</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span>computerName<span class=\"token punctuation\">,</span> userName<span class=\"token punctuation\">,</span> interfacesString<span class=\"token punctuation\">,</span> publicIP<span class=\"token punctuation\">,</span> timestamp<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n      found <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\r\n      <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n  <span class=\"token punctuation\">}</span>\r\n\r\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>found<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token comment\">// Append new row</span>\r\n    sheet<span class=\"token punctuation\">.</span><span class=\"token function\">appendRow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>computerName<span class=\"token punctuation\">,</span> userName<span class=\"token punctuation\">,</span> interfacesString<span class=\"token punctuation\">,</span> publicIP<span class=\"token punctuation\">,</span> timestamp<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token punctuation\">}</span>\r\n\r\n  <span class=\"token keyword\">return</span> ContentService<span class=\"token punctuation\">.</span><span class=\"token function\">createTextOutput</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Success\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\n\r\n\r\n\r\n\r\n###<span class=\"token constant\">FOR</span> <span class=\"token constant\">WINDOWS</span>\r\n\r\n\r\n# Check <span class=\"token keyword\">for</span> admin rights\r\n<span class=\"token function\">If</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token function\">not</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>Security<span class=\"token punctuation\">.</span>Principal<span class=\"token punctuation\">.</span>WindowsPrincipal<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>Security<span class=\"token punctuation\">.</span>Principal<span class=\"token punctuation\">.</span>WindowsIdentity<span class=\"token punctuation\">]</span><span class=\"token operator\">:</span><span class=\"token operator\">:</span><span class=\"token function\">GetCurrent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">IsInRole</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>Security<span class=\"token punctuation\">.</span>Principal<span class=\"token punctuation\">.</span>WindowsBuiltInRole<span class=\"token punctuation\">]</span> <span class=\"token string\">\"Administrator\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    $arguments <span class=\"token operator\">=</span> <span class=\"token string\">\"&amp; '\"</span> <span class=\"token operator\">+</span> $MyInvocation<span class=\"token punctuation\">.</span>MyCommand<span class=\"token punctuation\">.</span>Definition <span class=\"token operator\">+</span> <span class=\"token string\">\"'\"</span>\r\n    Start<span class=\"token operator\">-</span>Process powershell <span class=\"token operator\">-</span>Verb runAs <span class=\"token operator\">-</span>ArgumentList $arguments\r\n    Exit\r\n<span class=\"token punctuation\">}</span>\r\n\r\n$taskName <span class=\"token operator\">=</span> <span class=\"token string\">\"SendIPToGoogleSheet\"</span>\r\n$folderPath <span class=\"token operator\">=</span> <span class=\"token string\">\"C:\\IPAddress\"</span>\r\n$scriptPath <span class=\"token operator\">=</span> <span class=\"token string\">\"$folderPath\\SendIPToGoogleSheet.ps1\"</span>\r\n\r\n# Create folder <span class=\"token keyword\">if</span> it doesn't exist\r\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token function\">Not</span> <span class=\"token punctuation\">(</span>Test<span class=\"token operator\">-</span>Path $folderPath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    New<span class=\"token operator\">-</span>Item <span class=\"token operator\">-</span>Path $folderPath <span class=\"token operator\">-</span>ItemType Directory <span class=\"token operator\">-</span>Force <span class=\"token operator\">|</span> Out<span class=\"token operator\">-</span>Null\r\n<span class=\"token punctuation\">}</span>\r\n\r\n# Create or overwrite the worker script\r\n$workerScript <span class=\"token operator\">=</span> @'\r\n$webhookUrl <span class=\"token operator\">=</span> <span class=\"token string\">\"https://script.google.com/macros/s/YOUR_GOOGLESCRIPTADDRESSID/exec\"</span>\r\n\r\n$computerName <span class=\"token operator\">=</span> $env<span class=\"token operator\">:</span><span class=\"token constant\">COMPUTERNAME</span>\r\n$userName <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>Get<span class=\"token operator\">-</span>CimInstance <span class=\"token operator\">-</span>ClassName Win32_ComputerSystem<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>UserName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Split</span><span class=\"token punctuation\">(</span>'\\'<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\r\n\r\n$interfaces <span class=\"token operator\">=</span> @<span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\r\n\r\n$netIPs <span class=\"token operator\">=</span> Get<span class=\"token operator\">-</span>NetIPAddress <span class=\"token operator\">-</span>AddressFamily IPv4 <span class=\"token operator\">|</span> Where<span class=\"token operator\">-</span>Object <span class=\"token punctuation\">{</span>\r\n    $<span class=\"token punctuation\">.</span>IPAddress <span class=\"token operator\">-</span>notlike <span class=\"token string\">'169.254.*'</span> <span class=\"token operator\">-</span>and $<span class=\"token punctuation\">.</span>IPAddress <span class=\"token operator\">-</span>ne <span class=\"token string\">'127.0.0.1'</span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token function\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">$ip <span class=\"token keyword\">in</span> $netIPs</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    $ifaceAlias <span class=\"token operator\">=</span> $ip<span class=\"token punctuation\">.</span>InterfaceAlias\r\n    $ifaceIndex <span class=\"token operator\">=</span> $ip<span class=\"token punctuation\">.</span>InterfaceIndex\r\n    $adapter <span class=\"token operator\">=</span> Get<span class=\"token operator\">-</span>NetAdapter <span class=\"token operator\">-</span>InterfaceIndex $ifaceIndex <span class=\"token operator\">-</span>ErrorAction SilentlyContinue\r\n    $ifaceType <span class=\"token operator\">=</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>$adapter<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> $adapter<span class=\"token punctuation\">.</span>InterfaceType <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">}</span>\r\n\r\n    $key <span class=\"token operator\">=</span> <span class=\"token string\">\"Other\"</span>\r\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>$ifaceAlias <span class=\"token operator\">-</span>match <span class=\"token string\">\"PPP\"</span> <span class=\"token operator\">-</span>or $ifaceAlias <span class=\"token operator\">-</span>match <span class=\"token string\">\"mighty\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n        $key <span class=\"token operator\">=</span> <span class=\"token string\">\"VPN\"</span>\r\n    <span class=\"token punctuation\">}</span> <span class=\"token function\">elseif</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">$ifaceType <span class=\"token operator\">-</span>eq <span class=\"token number\">71</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n        $key <span class=\"token operator\">=</span> <span class=\"token string\">\"Wi-Fi\"</span>\r\n    <span class=\"token punctuation\">}</span> <span class=\"token function\">elseif</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">$ifaceType <span class=\"token operator\">-</span>eq <span class=\"token number\">6</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n        $key <span class=\"token operator\">=</span> <span class=\"token string\">\"Ethernet\"</span>\r\n    <span class=\"token punctuation\">}</span>\r\n\r\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>$interfaces<span class=\"token punctuation\">.</span><span class=\"token function\">ContainsKey</span><span class=\"token punctuation\">(</span>$key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n        $interfaces<span class=\"token punctuation\">[</span>$key<span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token string\">\", $($ip.IPAddress)\"</span>\r\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\r\n        $interfaces<span class=\"token punctuation\">[</span>$key<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> $ip<span class=\"token punctuation\">.</span>IPAddress\r\n    <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>$interfaces<span class=\"token punctuation\">.</span><span class=\"token function\">ContainsKey</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"VPN\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    $connectionType <span class=\"token operator\">=</span> <span class=\"token string\">\"VPN\"</span>\r\n<span class=\"token punctuation\">}</span> <span class=\"token function\">elseif</span> <span class=\"token punctuation\">(</span>$interfaces<span class=\"token punctuation\">.</span><span class=\"token function\">ContainsKey</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Wi-Fi\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    $connectionType <span class=\"token operator\">=</span> <span class=\"token string\">\"Wi-Fi\"</span>\r\n<span class=\"token punctuation\">}</span> <span class=\"token function\">elseif</span> <span class=\"token punctuation\">(</span>$interfaces<span class=\"token punctuation\">.</span><span class=\"token function\">ContainsKey</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Ethernet\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    $connectionType <span class=\"token operator\">=</span> <span class=\"token string\">\"Ethernet\"</span>\r\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\r\n    $connectionType <span class=\"token operator\">=</span> <span class=\"token string\">\"Other\"</span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\r\n    $publicIP <span class=\"token operator\">=</span> Invoke<span class=\"token operator\">-</span>RestMethod <span class=\"token operator\">-</span>Uri <span class=\"token string\">\"https://api.ipify.org?format=text\"</span>\r\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">{</span>\r\n    $publicIP <span class=\"token operator\">=</span> <span class=\"token string\">\"Unavailable\"</span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\n$body <span class=\"token operator\">=</span> @<span class=\"token punctuation\">{</span>\r\n    computerName   <span class=\"token operator\">=</span> $computerName\r\n    userName       <span class=\"token operator\">=</span> $userName\r\n    interfaces     <span class=\"token operator\">=</span> $interfaces\r\n    connectionType <span class=\"token operator\">=</span> $connectionType\r\n    publicIP       <span class=\"token operator\">=</span> $publicIP\r\n<span class=\"token punctuation\">}</span>\r\n\r\n$jsonBody <span class=\"token operator\">=</span> $body <span class=\"token operator\">|</span> ConvertTo<span class=\"token operator\">-</span>Json <span class=\"token operator\">-</span>Depth <span class=\"token number\">5</span>\r\n$utf8Bytes <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>System<span class=\"token punctuation\">.</span>Text<span class=\"token punctuation\">.</span>Encoding<span class=\"token punctuation\">]</span><span class=\"token operator\">:</span><span class=\"token operator\">:</span><span class=\"token constant\">UTF8</span><span class=\"token punctuation\">.</span><span class=\"token function\">GetBytes</span><span class=\"token punctuation\">(</span>$jsonBody<span class=\"token punctuation\">)</span>\r\nInvoke<span class=\"token operator\">-</span>RestMethod <span class=\"token operator\">-</span>Uri $webhookUrl <span class=\"token operator\">-</span>Method Post <span class=\"token operator\">-</span>Body $utf8Bytes <span class=\"token operator\">-</span>ContentType <span class=\"token string\">'application/json'</span>\r\n\r\nWrite<span class=\"token operator\">-</span>Output <span class=\"token string\">\"Sent data:\"</span>\r\nWrite<span class=\"token operator\">-</span>Output $jsonBody\r\n'@\r\n\r\nSet<span class=\"token operator\">-</span>Content <span class=\"token operator\">-</span>Path $scriptPath <span class=\"token operator\">-</span>Value $workerScript <span class=\"token operator\">-</span>Encoding <span class=\"token constant\">UTF8</span>\r\n\r\n# Define expected repetition\r\n$expectedInterval <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>New<span class=\"token operator\">-</span>TimeSpan <span class=\"token operator\">-</span>Hours <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\r\n$expectedDuration <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>New<span class=\"token operator\">-</span>TimeSpan <span class=\"token operator\">-</span>Days <span class=\"token number\">365</span><span class=\"token punctuation\">)</span>\r\n\r\n# Check <span class=\"token keyword\">if</span> task already exists <span class=\"token keyword\">with</span> correct trigger\r\n$existingTask <span class=\"token operator\">=</span> Get<span class=\"token operator\">-</span>ScheduledTask <span class=\"token operator\">-</span>TaskName $taskName <span class=\"token operator\">-</span>ErrorAction SilentlyContinue\r\n$needsUpdate <span class=\"token operator\">=</span> $<span class=\"token boolean\">true</span>\r\n\r\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>$existingTask<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    $trigger <span class=\"token operator\">=</span> $existingTask<span class=\"token punctuation\">.</span>Triggers <span class=\"token operator\">|</span> Where<span class=\"token operator\">-</span>Object <span class=\"token punctuation\">{</span> $_<span class=\"token punctuation\">.</span>Repetition <span class=\"token punctuation\">}</span>\r\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>$trigger <span class=\"token operator\">-</span>and $trigger<span class=\"token punctuation\">.</span>Repetition<span class=\"token punctuation\">.</span>Interval <span class=\"token operator\">-</span>eq $expectedInterval <span class=\"token operator\">-</span>and $trigger<span class=\"token punctuation\">.</span>Repetition<span class=\"token punctuation\">.</span>Duration <span class=\"token operator\">-</span>eq $expectedDuration<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n        $needsUpdate <span class=\"token operator\">=</span> $<span class=\"token boolean\">false</span>\r\n    <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>$needsUpdate<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>$existingTask<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n        Unregister<span class=\"token operator\">-</span>ScheduledTask <span class=\"token operator\">-</span>TaskName $taskName <span class=\"token operator\">-</span>Confirm<span class=\"token operator\">:</span>$<span class=\"token boolean\">false</span>\r\n    <span class=\"token punctuation\">}</span>\r\n\r\n    $runTime <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>Get<span class=\"token operator\">-</span>Date<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">AddSeconds</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\r\n    $trigger <span class=\"token operator\">=</span> New<span class=\"token operator\">-</span>ScheduledTaskTrigger <span class=\"token operator\">-</span>Once <span class=\"token operator\">-</span>At $runTime <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\r\n        -RepetitionInterval $expectedInterval </span><span class=\"token template-punctuation string\">`</span></span>\r\n        <span class=\"token operator\">-</span>RepetitionDuration $expectedDuration\r\n\r\n    $action <span class=\"token operator\">=</span> New<span class=\"token operator\">-</span>ScheduledTaskAction <span class=\"token operator\">-</span>Execute <span class=\"token string\">\"powershell.exe\"</span> <span class=\"token operator\">-</span>Argument <span class=\"token string\">\"-NoProfile -WindowStyle Hidden -ExecutionPolicy Bypass -File \"</span>$scriptPath<span class=\"token string\">\"\"</span>\r\n\r\n    Register<span class=\"token operator\">-</span>ScheduledTask <span class=\"token operator\">-</span>TaskName $taskName <span class=\"token operator\">-</span>Action $action <span class=\"token operator\">-</span>Trigger $trigger <span class=\"token operator\">-</span>User <span class=\"token string\">\"SYSTEM\"</span> <span class=\"token operator\">-</span>RunLevel Highest <span class=\"token operator\">-</span>Force\r\n\r\n    Write<span class=\"token operator\">-</span>Host <span class=\"token string\">\"Scheduled task '$taskName' created.\"</span>\r\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\r\n    Write<span class=\"token operator\">-</span>Host <span class=\"token string\">\"Scheduled task '$taskName' already exists with correct repetition. No update needed.\"</span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\n\r\n\r\n###<span class=\"token constant\">FOR</span> MACs\r\n\r\n#<span class=\"token operator\">!</span><span class=\"token operator\">/</span>bin<span class=\"token operator\">/</span>bash\r\n\r\n# Create directory\r\nmkdir <span class=\"token operator\">-</span>p <span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>local<span class=\"token operator\">/</span>IPAddress\r\n\r\n# <span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span>\r\n# <span class=\"token number\">1.</span> Write the <span class=\"token constant\">IP</span> reporting script\r\n# <span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span>\r\ncat <span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">'EOF'</span> <span class=\"token operator\">></span> <span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>local<span class=\"token operator\">/</span>IPAddress<span class=\"token operator\">/</span>send_ip_to_google<span class=\"token punctuation\">.</span>sh\r\n#<span class=\"token operator\">!</span><span class=\"token operator\">/</span>bin<span class=\"token operator\">/</span>bash\r\n\r\n<span class=\"token constant\">WEBHOOK</span><span class=\"token operator\">=</span><span class=\"token string\">\"https://script.google.com/macros/s/YOUR_GOOGLESCRIPTADDRESSID/exec\"</span>\r\n\r\n<span class=\"token constant\">COMPUTER_NAME</span><span class=\"token operator\">=</span><span class=\"token function\">$</span><span class=\"token punctuation\">(</span>scutil <span class=\"token operator\">--</span><span class=\"token keyword\">get</span> ComputerName<span class=\"token punctuation\">)</span>\r\n<span class=\"token constant\">USER_NAME</span><span class=\"token operator\">=</span><span class=\"token function\">$</span><span class=\"token punctuation\">(</span>whoami<span class=\"token punctuation\">)</span>\r\n<span class=\"token constant\">PUBLIC_IP</span><span class=\"token operator\">=</span><span class=\"token function\">$</span><span class=\"token punctuation\">(</span>curl <span class=\"token operator\">-</span>s https<span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>api<span class=\"token punctuation\">.</span>ipify<span class=\"token punctuation\">.</span>org<span class=\"token punctuation\">)</span>\r\n\r\ninterfaces_json<span class=\"token operator\">=</span><span class=\"token string\">\"{\"</span>\r\nfirst<span class=\"token operator\">=</span><span class=\"token boolean\">true</span>\r\n\r\n# Wi<span class=\"token operator\">-</span>Fi <span class=\"token constant\">IP</span> <span class=\"token punctuation\">(</span>en0<span class=\"token punctuation\">)</span>\r\n<span class=\"token constant\">WIFI_IP</span><span class=\"token operator\">=</span><span class=\"token function\">$</span><span class=\"token punctuation\">(</span>ipconfig getifaddr en0 <span class=\"token number\">2</span><span class=\"token operator\">></span><span class=\"token operator\">/</span>dev<span class=\"token operator\">/</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span> <span class=\"token operator\">-</span>n <span class=\"token string\">\"$WIFI_IP\"</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> then\r\n  interfaces_json<span class=\"token operator\">+=</span><span class=\"token string\">\"\\\"Wi-Fi\\\":\\\"$WIFI_IP\\\"\"</span>\r\n  first<span class=\"token operator\">=</span><span class=\"token boolean\">false</span>\r\nfi\r\n\r\n# <span class=\"token constant\">VPN</span> <span class=\"token constant\">IP</span> from ppp0 or utun<span class=\"token operator\">*</span>\r\n<span class=\"token keyword\">for</span> iface <span class=\"token keyword\">in</span> ppp0 utun0 utun1 utun2 utun3 utun4 utun5 utun6 utun7<span class=\"token punctuation\">;</span> <span class=\"token keyword\">do</span>\r\n  ip<span class=\"token operator\">=</span><span class=\"token function\">$</span><span class=\"token punctuation\">(</span>ifconfig <span class=\"token string\">\"$iface\"</span> <span class=\"token number\">2</span><span class=\"token operator\">></span><span class=\"token operator\">/</span>dev<span class=\"token operator\">/</span><span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> grep <span class=\"token string\">\"inet \"</span> <span class=\"token operator\">|</span> awk <span class=\"token string\">'{print $2}'</span><span class=\"token punctuation\">)</span>\r\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span> <span class=\"token operator\">-</span>n <span class=\"token string\">\"$ip\"</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> then\r\n    <span class=\"token keyword\">if</span> <span class=\"token operator\">!</span> $first<span class=\"token punctuation\">;</span> then\r\n      interfaces_json<span class=\"token operator\">+=</span><span class=\"token string\">\", \"</span>\r\n    fi\r\n    interfaces_json<span class=\"token operator\">+=</span><span class=\"token string\">\"\\\"VPN\\\":\\\"$ip\\\"\"</span>\r\n    <span class=\"token keyword\">break</span>\r\n  fi\r\ndone\r\n\r\ninterfaces_json<span class=\"token operator\">+=</span><span class=\"token string\">\"}\"</span>\r\n\r\n<span class=\"token constant\">JSON</span><span class=\"token operator\">=</span><span class=\"token function\">$</span><span class=\"token punctuation\">(</span>cat <span class=\"token operator\">&lt;&lt;</span><span class=\"token constant\">EOF2</span>\r\n<span class=\"token punctuation\">{</span>\r\n  <span class=\"token string\">\"computerName\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"$COMPUTER_NAME\"</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token string\">\"userName\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"$USER_NAME\"</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token string\">\"interfaces\"</span><span class=\"token operator\">:</span> $interfaces_json<span class=\"token punctuation\">,</span>\r\n  <span class=\"token string\">\"connectionType\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"macOS\"</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token string\">\"publicIP\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"$PUBLIC_IP\"</span>\r\n<span class=\"token punctuation\">}</span>\r\n<span class=\"token constant\">EOF2</span>\r\n<span class=\"token punctuation\">)</span>\r\n\r\ncurl <span class=\"token operator\">-</span>s <span class=\"token operator\">-</span><span class=\"token constant\">X</span> <span class=\"token constant\">POST</span> <span class=\"token operator\">-</span><span class=\"token constant\">H</span> <span class=\"token string\">\"Content-Type: application/json\"</span> <span class=\"token operator\">-</span>d <span class=\"token string\">\"$JSON\"</span> <span class=\"token string\">\"$WEBHOOK\"</span>\r\necho <span class=\"token string\">\"Sent JSON: $JSON\"</span>\r\n<span class=\"token constant\">EOF</span>\r\n\r\n# <span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span>\r\n# <span class=\"token number\">2.</span> Make it executable\r\n# <span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span>\r\nchmod <span class=\"token operator\">+</span>x <span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>local<span class=\"token operator\">/</span>IPAddress<span class=\"token operator\">/</span>send_ip_to_google<span class=\"token punctuation\">.</span>sh\r\n\r\n# <span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span>\r\n# <span class=\"token number\">3.</span> Create LaunchDaemon to run every <span class=\"token number\">5</span> mins\r\n# <span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span>\r\ncat <span class=\"token operator\">&lt;&lt;</span><span class=\"token constant\">EOF</span> <span class=\"token operator\">></span> <span class=\"token operator\">/</span>Library<span class=\"token operator\">/</span>LaunchDaemons<span class=\"token operator\">/</span>com<span class=\"token punctuation\">.</span>company<span class=\"token punctuation\">.</span>SendIPToGoogleSheet<span class=\"token punctuation\">.</span>plist\r\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">?</span>xml version<span class=\"token operator\">=</span><span class=\"token string\">\"1.0\"</span> encoding<span class=\"token operator\">=</span><span class=\"token string\">\"UTF-8\"</span><span class=\"token operator\">?</span><span class=\"token operator\">></span>\r\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token constant\">DOCTYPE</span> plist <span class=\"token constant\">PUBLIC</span> <span class=\"token string\">\"-//Apple//DTD PLIST 1.0//EN\"</span> <span class=\"token string\">\"http://www.apple.com/DTDs/PropertyList-1.0.dtd\"</span><span class=\"token operator\">></span>\r\n<span class=\"token operator\">&lt;</span>plist version<span class=\"token operator\">=</span><span class=\"token string\">\"1.0\"</span><span class=\"token operator\">></span>\r\n  <span class=\"token operator\">&lt;</span>dict<span class=\"token operator\">></span>\r\n    <span class=\"token operator\">&lt;</span>key<span class=\"token operator\">></span>Label<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>key<span class=\"token operator\">></span>\r\n    <span class=\"token operator\">&lt;</span>string<span class=\"token operator\">></span>com<span class=\"token punctuation\">.</span>company<span class=\"token punctuation\">.</span>SendIPToGoogleSheet<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>string<span class=\"token operator\">></span>\r\n    <span class=\"token operator\">&lt;</span>key<span class=\"token operator\">></span>ProgramArguments<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>key<span class=\"token operator\">></span>\r\n    <span class=\"token operator\">&lt;</span>array<span class=\"token operator\">></span>\r\n      <span class=\"token operator\">&lt;</span>string<span class=\"token operator\">></span><span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>local<span class=\"token operator\">/</span>IPAddress<span class=\"token operator\">/</span>send_ip_to_google<span class=\"token punctuation\">.</span>sh<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>string<span class=\"token operator\">></span>\r\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>array<span class=\"token operator\">></span>\r\n    <span class=\"token operator\">&lt;</span>key<span class=\"token operator\">></span>StartInterval<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>key<span class=\"token operator\">></span>\r\n    <span class=\"token operator\">&lt;</span>integer<span class=\"token operator\">></span><span class=\"token number\">3600</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>integer<span class=\"token operator\">></span>\r\n    <span class=\"token operator\">&lt;</span>key<span class=\"token operator\">></span>RunAtLoad<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>key<span class=\"token operator\">></span>\r\n    <span class=\"token operator\">&lt;</span><span class=\"token boolean\">true</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\r\n    <span class=\"token operator\">&lt;</span>key<span class=\"token operator\">></span>StandardOutPath<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>key<span class=\"token operator\">></span>\r\n    <span class=\"token operator\">&lt;</span>string<span class=\"token operator\">></span><span class=\"token operator\">/</span><span class=\"token keyword\">var</span><span class=\"token operator\">/</span>log<span class=\"token operator\">/</span>send_ip_to_google<span class=\"token punctuation\">.</span>log<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>string<span class=\"token operator\">></span>\r\n    <span class=\"token operator\">&lt;</span>key<span class=\"token operator\">></span>StandardErrorPath<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>key<span class=\"token operator\">></span>\r\n    <span class=\"token operator\">&lt;</span>string<span class=\"token operator\">></span><span class=\"token operator\">/</span><span class=\"token keyword\">var</span><span class=\"token operator\">/</span>log<span class=\"token operator\">/</span>send_ip_to_google<span class=\"token punctuation\">.</span>err<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>string<span class=\"token operator\">></span>\r\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>dict<span class=\"token operator\">></span>\r\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>plist<span class=\"token operator\">></span>\r\n<span class=\"token constant\">EOF</span>\r\n\r\n# <span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span>\r\n# <span class=\"token number\">4.</span> Set permissions and load\r\n# <span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span>\r\nchown root<span class=\"token operator\">:</span>wheel <span class=\"token operator\">/</span>Library<span class=\"token operator\">/</span>LaunchDaemons<span class=\"token operator\">/</span>com<span class=\"token punctuation\">.</span>company<span class=\"token punctuation\">.</span>SendIPToGoogleSheet<span class=\"token punctuation\">.</span>plist\r\nchmod <span class=\"token number\">644</span> <span class=\"token operator\">/</span>Library<span class=\"token operator\">/</span>LaunchDaemons<span class=\"token operator\">/</span>com<span class=\"token punctuation\">.</span>company<span class=\"token punctuation\">.</span>SendIPToGoogleSheet<span class=\"token punctuation\">.</span>plist\r\n\r\n# Unload <span class=\"token keyword\">if</span> already exists<span class=\"token punctuation\">,</span> then load\r\nlaunchctl unload <span class=\"token operator\">/</span>Library<span class=\"token operator\">/</span>LaunchDaemons<span class=\"token operator\">/</span>com<span class=\"token punctuation\">.</span>company<span class=\"token punctuation\">.</span>SendIPToGoogleSheet<span class=\"token punctuation\">.</span>plist <span class=\"token number\">2</span><span class=\"token operator\">></span><span class=\"token operator\">/</span>dev<span class=\"token operator\">/</span><span class=\"token keyword\">null</span>\r\nlaunchctl load <span class=\"token operator\">/</span>Library<span class=\"token operator\">/</span>LaunchDaemons<span class=\"token operator\">/</span>com<span class=\"token punctuation\">.</span>company<span class=\"token punctuation\">.</span>SendIPToGoogleSheet<span class=\"token punctuation\">.</span>plist\r\n\r\necho <span class=\"token string\">\"âœ… Installed and scheduled. Script will run every 1 hr.\"</span>\r\n\r\n</code></pre></div>","position":{"start":{"line":4,"column":1,"offset":118},"end":{"line":272,"column":1,"offset":8201}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":272,"column":1,"offset":8201}}}}