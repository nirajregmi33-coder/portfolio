{"expireTime":9007201009626691000,"key":"transformer-remark-markdown-ast-12c96827062201f8df563663a3f698aa-gatsby-remark-external-linksgatsby-remark-imagesgatsby-remark-code-titlesgatsby-remark-prismjs-","val":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"This tutorial explains how to connect a React frontend with Google BigQuery using a Node.js backend.","position":{"start":{"line":2,"column":1,"offset":2},"end":{"line":2,"column":101,"offset":102}}}],"position":{"start":{"line":2,"column":1,"offset":2},"end":{"line":2,"column":101,"offset":102}}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">### Step <span class=\"token number\">1</span><span class=\"token operator\">:</span> Setup Node<span class=\"token punctuation\">.</span>js Server\r\n\r\n\r\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> BigQuery <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'@google-cloud/bigquery'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">const</span> bigquery <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BigQuery</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\r\n  projectId<span class=\"token operator\">:</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">GCP_PROJECT_ID</span><span class=\"token punctuation\">,</span>\r\n  credentials<span class=\"token operator\">:</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">GCP_CREDENTIALS</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">getUsers</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">BIGQUERY_DATASET</span><span class=\"token punctuation\">)</span>\r\n  <span class=\"token keyword\">const</span> query <span class=\"token operator\">=</span> <span class=\"token constant\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token constant\">FROM</span> \\$<span class=\"token punctuation\">{</span>process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">BIGQUERY_DATASET</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">.</span>user_master_list\\ <span class=\"token constant\">LIMIT</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>rows<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> bigquery<span class=\"token punctuation\">.</span><span class=\"token function\">query</span><span class=\"token punctuation\">(</span>query<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token keyword\">return</span> rows<span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">addUser</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">user</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token keyword\">const</span> query <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\r\n    query<span class=\"token operator\">:</span> <span class=\"token constant\">INSERT</span> <span class=\"token constant\">INTO</span> \\$<span class=\"token punctuation\">{</span>process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">BIGQUERY_DATASET</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">.</span>user_master_list\\<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\"> \r\n            (user_code, username_kanji, username_kana) \r\n            VALUES (@code, @kanji, @kana)</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\r\n    params<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\r\n      code<span class=\"token operator\">:</span> user<span class=\"token punctuation\">.</span>code<span class=\"token punctuation\">,</span>\r\n      kanji<span class=\"token operator\">:</span> user<span class=\"token punctuation\">.</span>usernameKanji<span class=\"token punctuation\">,</span>\r\n      kana<span class=\"token operator\">:</span> user<span class=\"token punctuation\">.</span>usernameKana\r\n    <span class=\"token punctuation\">}</span>\r\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token keyword\">await</span> bigquery<span class=\"token punctuation\">.</span><span class=\"token function\">query</span><span class=\"token punctuation\">(</span>query<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\r\n\r\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> getUsers<span class=\"token punctuation\">,</span> addUser <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\r\n\r\n\r\n### Step <span class=\"token number\">2</span><span class=\"token operator\">:</span> Setup <span class=\"token constant\">CRUD</span> operation <span class=\"token keyword\">in</span> server<span class=\"token punctuation\">.</span>js <span class=\"token keyword\">in</span> the backend \r\n\r\n<span class=\"token keyword\">import</span> dotenv <span class=\"token keyword\">from</span> <span class=\"token string\">'dotenv'</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// Use import instead of require</span>\r\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> fileURLToPath <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'url'</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> dirname <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'path'</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token comment\">// Get the current file's directory path</span>\r\n<span class=\"token keyword\">const</span> __filename <span class=\"token operator\">=</span> <span class=\"token function\">fileURLToPath</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">import</span><span class=\"token punctuation\">.</span>meta<span class=\"token punctuation\">.</span>url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">const</span> _dirname <span class=\"token operator\">=</span> <span class=\"token function\">dirname</span><span class=\"token punctuation\">(</span>_filename<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token comment\">// Load environment variables from .env file in the same directory as server.js</span>\r\ndotenv<span class=\"token punctuation\">.</span><span class=\"token function\">config</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">path</span><span class=\"token operator\">:</span> $<span class=\"token punctuation\">{</span>__dirname<span class=\"token punctuation\">}</span><span class=\"token operator\">/</span><span class=\"token punctuation\">.</span>env <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">import</span> express<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> json <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'express'</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">import</span> cors <span class=\"token keyword\">from</span> <span class=\"token string\">'cors'</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> BigQuery <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@google-cloud/bigquery'</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> <span class=\"token function\">express</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token function\">cors</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token comment\">// BigQuery Client</span>\r\n<span class=\"token keyword\">const</span> bigquery <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BigQuery</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\r\n  projectId<span class=\"token operator\">:</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">GOOGLE_CLOUD_PROJECT</span><span class=\"token punctuation\">,</span>\r\n  keyFilename<span class=\"token operator\">:</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">GOOGLE_APPLICATION_CREDENTIALS</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token function\">cors</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\r\n  origin<span class=\"token operator\">:</span> <span class=\"token string\">'http://localhost:3000'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// Your frontend URL</span>\r\n  methods<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'GET'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'POST'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'PUT'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'DELETE'</span><span class=\"token punctuation\">]</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\napp<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/api/data'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> res</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">const</span> query <span class=\"token operator\">=</span> <span class=\"token string\">\"SELECT * FROM core-crowbar-266504.testMMP.test_user\"</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>rows<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> bigquery<span class=\"token punctuation\">.</span><span class=\"token function\">query</span><span class=\"token punctuation\">(</span>query<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    res<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span>rows<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    res<span class=\"token punctuation\">.</span><span class=\"token function\">status</span><span class=\"token punctuation\">(</span><span class=\"token number\">500</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\napp<span class=\"token punctuation\">.</span><span class=\"token function\">post</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/api/data'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> res</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token comment\">// Debugging: Log the complete incoming request</span>\r\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Incoming POST request headers:'</span><span class=\"token punctuation\">,</span> req<span class=\"token punctuation\">.</span>headers<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Raw request body:'</span><span class=\"token punctuation\">,</span> req<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n    <span class=\"token comment\">// Handle both nested { user: {...} } and flat request structures</span>\r\n    <span class=\"token keyword\">const</span> userData <span class=\"token operator\">=</span> req<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>user <span class=\"token operator\">||</span> req<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">;</span>\r\n    \r\n    <span class=\"token comment\">// Validate required fields</span>\r\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>userData<span class=\"token punctuation\">.</span><span class=\"token constant\">USER_CD</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>userData<span class=\"token punctuation\">.</span>code<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n      <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'User code is required'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n\r\n    <span class=\"token comment\">// BigQuery INSERT query with parameterized values</span>\r\n    <span class=\"token keyword\">const</span> query <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\r\n      INSERT INTO \\core-crowbar-266504.testMMP.test_user\\\r\n      (USER_CD, USER_LAST_NM, USERKN_LAST_NM, ADMIN_FLG)\r\n      VALUES (@userCode, @userNameKanji, @userNameKana, @isManager)\r\n    </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\r\n\r\n    <span class=\"token comment\">// Query parameters with fallbacks for different field naming conventions</span>\r\n    <span class=\"token keyword\">const</span> options <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\r\n      query<span class=\"token operator\">:</span> query<span class=\"token punctuation\">,</span>\r\n      params<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\r\n        userCode<span class=\"token operator\">:</span> userData<span class=\"token punctuation\">.</span><span class=\"token constant\">USER_CD</span> <span class=\"token operator\">||</span> userData<span class=\"token punctuation\">.</span>code<span class=\"token punctuation\">,</span>\r\n        userNameKanji<span class=\"token operator\">:</span> userData<span class=\"token punctuation\">.</span><span class=\"token constant\">USER_LAST_NM</span> <span class=\"token operator\">||</span> userData<span class=\"token punctuation\">.</span>usernameKanji <span class=\"token operator\">||</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span>\r\n        userNameKana<span class=\"token operator\">:</span> userData<span class=\"token punctuation\">.</span><span class=\"token constant\">USERKN_LAST_NM</span> <span class=\"token operator\">||</span> userData<span class=\"token punctuation\">.</span>usernameKana <span class=\"token operator\">||</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span>\r\n      <span class=\"token comment\">//  organize: userData.STRUCTURE_CD || userData.organize || '',</span>\r\n      <span class=\"token comment\">//  post: userData.POSITION_CD || userData.post || '',</span>\r\n        isManager<span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>userData<span class=\"token punctuation\">.</span><span class=\"token constant\">ADMIN_FLG</span> <span class=\"token operator\">||</span> userData<span class=\"token punctuation\">.</span>isManager<span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token number\">1</span> <span class=\"token operator\">:</span> <span class=\"token number\">0</span>\r\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n      <span class=\"token comment\">//location: 'US' // Specify dataset location if needed</span>\r\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\r\n\r\n    \r\n\r\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Executing BigQuery with options:'</span><span class=\"token punctuation\">,</span> options<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n    <span class=\"token comment\">// Execute the query</span>\r\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>job<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> bigquery<span class=\"token punctuation\">.</span><span class=\"token function\">createQueryJob</span><span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>rows<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> job<span class=\"token punctuation\">.</span><span class=\"token function\">getQueryResults</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n    <span class=\"token comment\">// Successful response</span>\r\n    res<span class=\"token punctuation\">.</span><span class=\"token function\">status</span><span class=\"token punctuation\">(</span><span class=\"token number\">201</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\r\n      success<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\r\n      message<span class=\"token operator\">:</span> <span class=\"token string\">'User created successfully'</span><span class=\"token punctuation\">,</span>\r\n      insertedId<span class=\"token operator\">:</span> userData<span class=\"token punctuation\">.</span><span class=\"token constant\">USER_CD</span> <span class=\"token operator\">||</span> userData<span class=\"token punctuation\">.</span>code<span class=\"token punctuation\">,</span>\r\n      bigQueryResult<span class=\"token operator\">:</span> rows<span class=\"token punctuation\">,</span>\r\n      timestamp<span class=\"token operator\">:</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toISOString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Error processing POST request:'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\r\n      error<span class=\"token operator\">:</span> err<span class=\"token punctuation\">,</span>\r\n      stack<span class=\"token operator\">:</span> err<span class=\"token punctuation\">.</span>stack<span class=\"token punctuation\">,</span>\r\n      requestBody<span class=\"token operator\">:</span> req<span class=\"token punctuation\">.</span>body\r\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n    <span class=\"token comment\">// Enhanced error response</span>\r\n    res<span class=\"token punctuation\">.</span><span class=\"token function\">status</span><span class=\"token punctuation\">(</span><span class=\"token number\">500</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\r\n      success<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\r\n      message<span class=\"token operator\">:</span> <span class=\"token string\">'Failed to create user record'</span><span class=\"token punctuation\">,</span>\r\n      error<span class=\"token operator\">:</span> err<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">,</span>\r\n      details<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\r\n        bigQueryError<span class=\"token operator\">:</span> err<span class=\"token punctuation\">.</span>errors <span class=\"token operator\">||</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span>\r\n        receivedData<span class=\"token operator\">:</span> req<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">,</span>\r\n        timestamp<span class=\"token operator\">:</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toISOString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n      <span class=\"token punctuation\">}</span>\r\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token comment\">// PUT endpoint to update an existing user</span>\r\napp<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/api/data/:userCode'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> res</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token comment\">// Get the userCode from the URL parameter</span>\r\n    <span class=\"token keyword\">const</span> userCode <span class=\"token operator\">=</span> req<span class=\"token punctuation\">.</span>params<span class=\"token punctuation\">.</span>userCode<span class=\"token punctuation\">;</span>\r\n    <span class=\"token comment\">// Support both nested { user: {...} } and flat request structures</span>\r\n    <span class=\"token keyword\">const</span> userData <span class=\"token operator\">=</span> req<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>user <span class=\"token operator\">||</span> req<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">;</span>\r\n    \r\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>userCode<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n      <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'User code is required for update'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n    \r\n    <span class=\"token comment\">// BigQuery UPDATE query with parameterized values</span>\r\n    <span class=\"token keyword\">const</span> query <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\r\n      UPDATE \\core-crowbar-266504.testMMP.test_user\\\r\n      SET USER_LAST_NM = @userNameKanji,\r\n          USERKN_LAST_NM = @userNameKana,\r\n          ADMIN_FLG = @isManager\r\n      WHERE USER_CD = @userCode\r\n    </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\r\n    \r\n    <span class=\"token keyword\">const</span> options <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\r\n      query<span class=\"token operator\">:</span> query<span class=\"token punctuation\">,</span>\r\n      params<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\r\n        userCode<span class=\"token operator\">:</span> userCode<span class=\"token punctuation\">,</span>\r\n        userNameKanji<span class=\"token operator\">:</span> userData<span class=\"token punctuation\">.</span><span class=\"token constant\">USER_LAST_NM</span> <span class=\"token operator\">||</span> userData<span class=\"token punctuation\">.</span>usernameKanji <span class=\"token operator\">||</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span>\r\n        userNameKana<span class=\"token operator\">:</span> userData<span class=\"token punctuation\">.</span><span class=\"token constant\">USERKN_LAST_NM</span> <span class=\"token operator\">||</span> userData<span class=\"token punctuation\">.</span>usernameKana <span class=\"token operator\">||</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span>\r\n        isManager<span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>userData<span class=\"token punctuation\">.</span><span class=\"token constant\">ADMIN_FLG</span> <span class=\"token operator\">||</span> userData<span class=\"token punctuation\">.</span>isManager<span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token number\">1</span> <span class=\"token operator\">:</span> <span class=\"token number\">0</span>\r\n      <span class=\"token punctuation\">}</span>\r\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\r\n\r\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Executing BigQuery update with options:'</span><span class=\"token punctuation\">,</span> options<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    \r\n    <span class=\"token comment\">// Execute the update query</span>\r\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>job<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> bigquery<span class=\"token punctuation\">.</span><span class=\"token function\">createQueryJob</span><span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">await</span> job<span class=\"token punctuation\">.</span><span class=\"token function\">getQueryResults</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n    res<span class=\"token punctuation\">.</span><span class=\"token function\">status</span><span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\r\n      success<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\r\n      message<span class=\"token operator\">:</span> <span class=\"token string\">'User updated successfully'</span><span class=\"token punctuation\">,</span>\r\n      updatedId<span class=\"token operator\">:</span> userCode<span class=\"token punctuation\">,</span>\r\n      timestamp<span class=\"token operator\">:</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toISOString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Error processing PUT request:'</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    res<span class=\"token punctuation\">.</span><span class=\"token function\">status</span><span class=\"token punctuation\">(</span><span class=\"token number\">500</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\r\n      success<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\r\n      message<span class=\"token operator\">:</span> <span class=\"token string\">'Failed to update user record'</span><span class=\"token punctuation\">,</span>\r\n      error<span class=\"token operator\">:</span> err<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">,</span>\r\n      timestamp<span class=\"token operator\">:</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toISOString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token comment\">// DELETE Route</span>\r\napp<span class=\"token punctuation\">.</span><span class=\"token function\">delete</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/api/data/:userId'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> res</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> userId <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> req<span class=\"token punctuation\">.</span>params<span class=\"token punctuation\">;</span> <span class=\"token comment\">// Get userId from URL parameter</span>\r\n  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token comment\">// Define the DELETE query</span>\r\n    <span class=\"token keyword\">const</span> query <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\r\n      DELETE FROM \\core-crowbar-266504.testMMP.test_user\\\r\n      WHERE USER_CD = @userId\r\n    </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\r\n    \r\n    <span class=\"token comment\">// Define query parameters</span>\r\n    <span class=\"token keyword\">const</span> options <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\r\n      query<span class=\"token operator\">:</span> query<span class=\"token punctuation\">,</span>\r\n      params<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\r\n        userId<span class=\"token operator\">:</span> userId<span class=\"token punctuation\">,</span>\r\n      <span class=\"token punctuation\">}</span>\r\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\r\n    \r\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Executing DELETE query with options:'</span><span class=\"token punctuation\">,</span> options<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    \r\n    <span class=\"token comment\">// Execute the query</span>\r\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>job<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> bigquery<span class=\"token punctuation\">.</span><span class=\"token function\">createQueryJob</span><span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">await</span> job<span class=\"token punctuation\">.</span><span class=\"token function\">getQueryResults</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    \r\n    <span class=\"token comment\">// Successful response</span>\r\n    res<span class=\"token punctuation\">.</span><span class=\"token function\">status</span><span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\r\n      success<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\r\n      message<span class=\"token operator\">:</span> <span class=\"token string\">'User deleted successfully'</span><span class=\"token punctuation\">,</span>\r\n      deletedUserId<span class=\"token operator\">:</span> userId<span class=\"token punctuation\">,</span>\r\n      timestamp<span class=\"token operator\">:</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toISOString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Error deleting user:'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\r\n      error<span class=\"token operator\">:</span> err<span class=\"token punctuation\">,</span>\r\n      stack<span class=\"token operator\">:</span> err<span class=\"token punctuation\">.</span>stack<span class=\"token punctuation\">,</span>\r\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    \r\n    <span class=\"token comment\">// Error response</span>\r\n    res<span class=\"token punctuation\">.</span><span class=\"token function\">status</span><span class=\"token punctuation\">(</span><span class=\"token number\">500</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\r\n      success<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\r\n      message<span class=\"token operator\">:</span> <span class=\"token string\">'Failed to delete user'</span><span class=\"token punctuation\">,</span>\r\n      error<span class=\"token operator\">:</span> err<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">,</span>\r\n      details<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\r\n        bigQueryError<span class=\"token operator\">:</span> err<span class=\"token punctuation\">.</span>errors <span class=\"token operator\">||</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span>\r\n        timestamp<span class=\"token operator\">:</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toISOString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n      <span class=\"token punctuation\">}</span>\r\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n\r\n<span class=\"token keyword\">const</span> <span class=\"token constant\">PORT</span> <span class=\"token operator\">=</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">PORT</span> <span class=\"token operator\">||</span> <span class=\"token number\">5000</span><span class=\"token punctuation\">;</span>\r\napp<span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token constant\">PORT</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>Server running on port $<span class=\"token punctuation\">{</span><span class=\"token constant\">PORT</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token operator\">--</span><span class=\"token operator\">-</span>\r\n\r\n\r\n</code></pre></div>","position":{"start":{"line":5,"column":1,"offset":108},"end":{"line":265,"column":1,"offset":7664}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":265,"column":1,"offset":7664}}}}